// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.Gateway.Automation.Client.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CustomPolicyRequest
    {
        /// <summary>
        /// Initializes a new instance of the CustomPolicyRequest class.
        /// </summary>
        public CustomPolicyRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CustomPolicyRequest class.
        /// </summary>
        /// <param name="entityType">Possible values include: 'Product',
        /// 'Api'</param>
        public CustomPolicyRequest(string name, string xml, System.Guid? entityId = default(System.Guid?), string description = default(string), string entityType = default(string))
        {
            EntityId = entityId;
            Name = name;
            Description = description;
            Xml = xml;
            EntityType = entityType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityId")]
        public System.Guid? EntityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "xml")]
        public string Xml { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Product', 'Api'
        /// </summary>
        [JsonProperty(PropertyName = "entityType")]
        public string EntityType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Xml == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Xml");
            }
        }
    }
}
