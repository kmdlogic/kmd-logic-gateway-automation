// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Kmd.Logic.Gateway.Automation.Client.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ApiListModel
    {
        /// <summary>
        /// Initializes a new instance of the ApiListModel class.
        /// </summary>
        public ApiListModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ApiListModel class.
        /// </summary>
        /// <param name="visibility">Possible values include: 'Public',
        /// 'Private'</param>
        /// <param name="synchronization">Possible values include: 'Pending',
        /// 'Active', 'Faulted'</param>
        /// <param name="status">Possible values include: 'Preview', 'Active',
        /// 'Deprecated'</param>
        public ApiListModel(System.Guid? id = default(System.Guid?), string name = default(string), string description = default(string), System.Guid? providerId = default(System.Guid?), string path = default(string), string visibility = default(string), System.Guid? apiVersionSetId = default(System.Guid?), string apiVersion = default(string), string apiVersionDescription = default(string), string openApiSpecUrl = default(string), IList<System.Guid?> productIds = default(IList<System.Guid?>), string logoUrl = default(string), string documentationUrl = default(string), string synchronization = default(string), string status = default(string), bool? isCurrent = default(bool?))
        {
            Id = id;
            Name = name;
            Description = description;
            ProviderId = providerId;
            Path = path;
            Visibility = visibility;
            ApiVersionSetId = apiVersionSetId;
            ApiVersion = apiVersion;
            ApiVersionDescription = apiVersionDescription;
            OpenApiSpecUrl = openApiSpecUrl;
            ProductIds = productIds;
            LogoUrl = logoUrl;
            DocumentationUrl = documentationUrl;
            Synchronization = synchronization;
            Status = status;
            IsCurrent = isCurrent;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "providerId")]
        public System.Guid? ProviderId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "path")]
        public string Path { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Public', 'Private'
        /// </summary>
        [JsonProperty(PropertyName = "visibility")]
        public string Visibility { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apiVersionSetId")]
        public System.Guid? ApiVersionSetId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apiVersion")]
        public string ApiVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "apiVersionDescription")]
        public string ApiVersionDescription { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "openApiSpecUrl")]
        public string OpenApiSpecUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "productIds")]
        public IList<System.Guid?> ProductIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logoUrl")]
        public string LogoUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentationUrl")]
        public string DocumentationUrl { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Pending', 'Active',
        /// 'Faulted'
        /// </summary>
        [JsonProperty(PropertyName = "synchronization")]
        public string Synchronization { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Preview', 'Active',
        /// 'Deprecated'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isCurrent")]
        public bool? IsCurrent { get; set; }

    }
}
